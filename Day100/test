import random


class Card(object):
    def __init__(self, suite, face):
        self._suite = suite
        self._face = face

    @property
    def suite(self):
        return self._suite

    @property
    def face(self):
        return self._face

    def __str__(self):
        if self._face == 1:
            self._face == 'A'
        elif self._face == 11:
            self._face = 'J'
        elif self._face == 12:
            self._face = 'Q'
        elif self._face == 13:
            self._face = 'K'
        else:
            self._face = str(self._face)

        return '%s%s' % (self._suite, self._face)

    def __repr__(self):
        return self.__str__()


class Poker(object):
    def __init__(self):
        self._cards = [Card(suite, face)
                       for suite in '♠♥♣♦' for face in range(1, 14)]
        self._current = 0
        self._cards.extend([Card('B','King'),Card('S','Queen')])

    @property
    def cards(self):
        return self._cards

    def shuffle(self):
        random.shuffle(self._cards)

    @property
    def push_card(self):
        card = self._cards[self._current]
        self._current += 1
        return card

    def has_card(self):
        return self._current < len(self._cards)


class Player(object):
    def __init__(self, name):
        self._name = name
        self._cards_on_hand=[]


    @property
    def name(self):
        return self._name
    
    @property
    def cards_on_hand(self):
        return self._cards_on_hand
    
    def hand_cards(self,card):
        self._cards_on_hand.append(card)

    def arrange(self,card_key):
        self._cards_on_hand.sort(key=card_key)

def get_key(card):
    return (card.suite,card.face)

def main():
    c=Poker()
    c.shuffle()
    players=[Player('jerry'),Player('kian'),Player('justin')]
    for _ in range(14):
        for player in players:
            player.hand_cards(c.push_card)

    for player in players:
        print(player.name,':',end=' ')
        #player.arrange(get_key)
        print(player.cards_on_hand)

if __name__=='__main__':
    main()


